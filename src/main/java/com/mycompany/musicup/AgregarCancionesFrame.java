/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.musicup;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.Statement; // (La necesitas para RETURN_GENERATED_KEYS)
import java.sql.ResultSet;


public class AgregarCancionesFrame extends javax.swing.JFrame {

    /**
     * Creates new form AgregarCancionesFrame
     */
    private String namePlaylist;
    private int idPlaylist;
    public AgregarCancionesFrame(String namePlaylist, int idPlaylist) {
        initComponents();
        this.getContentPane().setBackground(new Color(43, 35, 59));
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.namePlaylist = namePlaylist;
        this.idPlaylist = idPlaylist;
        playlistNameTxt.setText(namePlaylist);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playlistNameTxt = new javax.swing.JLabel();
        NameSongField = new javax.swing.JTextField();
        artistField = new javax.swing.JTextField();
        btnAddSong = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        durationField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(797, 496));
        setMinimumSize(new java.awt.Dimension(797, 496));
        setPreferredSize(new java.awt.Dimension(797, 496));

        playlistNameTxt.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        playlistNameTxt.setForeground(new java.awt.Color(242, 242, 242));
        playlistNameTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playlistNameTxt.setText("Rock");
        playlistNameTxt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        NameSongField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NameSongField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NameSongField.setText("name");
        NameSongField.setToolTipText("name");

        artistField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        artistField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        artistField.setText("artist");
        artistField.setToolTipText("artist");

        btnAddSong.setBackground(new java.awt.Color(103, 200, 132));
        btnAddSong.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        btnAddSong.setForeground(new java.awt.Color(242, 242, 242));
        btnAddSong.setText("+");
        btnAddSong.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddSong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddSongMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlc\\Desktop\\todo\\ApacheProjects\\MusicUp\\src\\main\\java\\com\\mycompany\\musicup\\logoMusicUpChico.png")); // NOI18N

        btnHome.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlc\\Desktop\\todo\\ApacheProjects\\MusicUp\\src\\main\\java\\com\\mycompany\\musicup\\homeIconChico.png")); // NOI18N
        btnHome.setOpaque(false);
        btnHome.setContentAreaFilled(false);
        btnHome.setBorderPainted(false);
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomeMouseClicked(evt);
            }
        });

        durationField1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        durationField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        durationField1.setText("duration");
        durationField1.setToolTipText("duration");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154)
                .addComponent(playlistNameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addGap(149, 149, 149)
                .addComponent(jLabel1)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(btnAddSong, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(NameSongField)
                            .addComponent(artistField)
                            .addComponent(durationField1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(playlistNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addComponent(NameSongField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(artistField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(durationField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(btnAddSong, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseClicked
        backMenu();
    }//GEN-LAST:event_btnHomeMouseClicked

    private void btnAddSongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddSongMouseClicked
        crearCancion();
    }//GEN-LAST:event_btnAddSongMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarCancionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarCancionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarCancionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarCancionesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarCancionesFrame("Rock", 1).setVisible(true);
            }
        });
    }
    
    private void backMenu() {
        Menu menu = new Menu();
        menu.setVisible(true); 
        this.dispose();
    }
    
    private void crearCancion() {
        String nombreCancion = NameSongField.getText();
        String artista = artistField.getText();
        String duracion = durationField1.getText(); // Asumimos que es un texto como "3:45"

        // --- Validación ---
        if (nombreCancion.isEmpty() || nombreCancion.equals("name") || artista.isEmpty() || artista.equals("artist")) {
            JOptionPane.showMessageDialog(this, "El nombre y el artista son obligatorios.");
            return;
        }

        Connection conn = null;
        String sqlInsertSong = "INSERT INTO song (nameSong, artistSong, duration) VALUES (?, ?, ?)";
        String sqlLinkSong = "INSERT INTO playlist_songs (idplaylist, idsong) VALUES (?, ?)";

        try {
            conn = ConexionDB.getConnection();
            // --- 1. Iniciar Transacción ---
            conn.setAutoCommit(false); 

            long newSongId = -1; // Variable para guardar el ID de la nueva canción

            // --- 2. Insertar la canción en la tabla 'song' ---
            // Usamos Statement.RETURN_GENERATED_KEYS para poder obtener el ID
            try (PreparedStatement pstmtSong = conn.prepareStatement(sqlInsertSong, Statement.RETURN_GENERATED_KEYS)) {

                pstmtSong.setString(1, nombreCancion);
                pstmtSong.setString(2, artista);
                pstmtSong.setString(3, duracion);

                int filasAfectadas = pstmtSong.executeUpdate();

                if (filasAfectadas == 0) {
                    throw new SQLException("No se pudo crear la canción, 0 filas afectadas.");
                }

                // Obtener el ID de la canción recién creada
                try (ResultSet generatedKeys = pstmtSong.getGeneratedKeys()) {
                    if (generatedKeys.next()) {
                        newSongId = generatedKeys.getLong(1); // Obtenemos el ID
                    } else {
                        throw new SQLException("No se pudo obtener el ID de la canción creada.");
                    }
                }
            }

            // --- 3. Vincular la canción a la playlist en 'playlist_songs' ---
            try (PreparedStatement pstmtLink = conn.prepareStatement(sqlLinkSong)) {

                pstmtLink.setInt(1, this.idPlaylist); // ¡El ID de la playlist actual!
                pstmtLink.setLong(2, newSongId);      // ¡El ID de la nueva canción!

                pstmtLink.executeUpdate();
            }

            // --- 4. Si todo salió bien, guardar cambios permanentemente ---
            conn.commit(); 
            JOptionPane.showMessageDialog(this, "¡Canción '" + nombreCancion + "' creada y añadida a '" + this.namePlaylist + "'!");

            // Limpiar campos
            NameSongField.setText("name");
            artistField.setText("artist");
            durationField1.setText("duration");

            // (En el futuro, aquí llamarías a un método para refrescar la lista de canciones)

        } catch (SQLException e) {
            System.out.println("Error en la transacción: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error al añadir la canción: " + e.getMessage());

            // --- 5. Deshacer cambios si algo falló ---
            if (conn != null) {
                try {
                    conn.rollback();
                } catch (SQLException ex) {
                    System.out.println("Error en rollback: " + ex.getMessage());
                }
            }
        } finally {
            // --- 6. Devolver la conexión a la normalidad ---
            if (conn != null) {
                try {
                    conn.setAutoCommit(true);
                    conn.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NameSongField;
    private javax.swing.JTextField artistField;
    private javax.swing.JButton btnAddSong;
    private javax.swing.JButton btnHome;
    private javax.swing.JTextField durationField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel playlistNameTxt;
    // End of variables declaration//GEN-END:variables
}
